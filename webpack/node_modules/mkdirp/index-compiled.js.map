{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n"]}