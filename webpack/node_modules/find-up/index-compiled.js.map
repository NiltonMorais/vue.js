{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,aAAa,QAAQ,aAAR,CAAjB;AACA,IAAI,UAAU,QAAQ,gBAAR,CAAd;;AAEA,SAAS,SAAT,CAAmB,CAAnB,EAAsB;AACrB,QAAO,KAAK,OAAL,CAAa,KAAK,EAAlB,EAAsB,KAAtB,CAA4B,KAAK,GAAjC,CAAP;AACA;;AAED,SAAS,IAAT,CAAc,KAAd,EAAqB,QAArB,EAA+B;AAC9B,QAAO,KAAK,OAAL,CAAa,MAAM,IAAN,CAAW,KAAK,GAAhB,IAAuB,KAAK,GAAzC,EAA8C,QAA9C,CAAP;AACA;;AAED,OAAO,OAAP,GAAiB,UAAU,QAAV,EAAoB,IAApB,EAA0B;AAC1C,QAAO,QAAQ,EAAf;;AAEA,KAAI,QAAQ,UAAU,KAAK,GAAf,CAAZ;;AAEA,QAAO,IAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB;AACrC,GAAC,SAAS,IAAT,GAAgB;AAChB,OAAI,KAAK,KAAK,KAAL,EAAY,QAAZ,CAAT;;AAEA,cAAW,EAAX,EAAe,IAAf,CAAoB,UAAU,MAAV,EAAkB;AACrC,QAAI,MAAJ,EAAY;AACX,aAAQ,EAAR;AACA,KAFD,MAEO,IAAI,MAAM,GAAN,EAAJ,EAAiB;AACvB;AACA,KAFM,MAEA;AACN,aAAQ,IAAR;AACA;AACD,IARD;AASA,GAZD;AAaA,EAdM,CAAP;AAeA,CApBD;;AAsBA,OAAO,OAAP,CAAe,IAAf,GAAsB,UAAU,QAAV,EAAoB,IAApB,EAA0B;AAC/C,QAAO,QAAQ,EAAf;;AAEA,KAAI,QAAQ,UAAU,KAAK,GAAf,CAAZ;AACA,KAAI,MAAM,MAAM,MAAhB;;AAEA,QAAO,KAAP,EAAc;AACb,MAAI,KAAK,KAAK,KAAL,EAAY,QAAZ,CAAT;;AAEA,MAAI,WAAW,IAAX,CAAgB,EAAhB,CAAJ,EAAyB;AACxB,UAAO,EAAP;AACA;;AAED,QAAM,GAAN;AACA;;AAED,QAAO,IAAP;AACA,CAjBD","file":"index-compiled.js","sourcesContent":["'use strict';\nvar path = require('path');\nvar pathExists = require('path-exists');\nvar Promise = require('pinkie-promise');\n\nfunction splitPath(x) {\n\treturn path.resolve(x || '').split(path.sep);\n}\n\nfunction join(parts, filename) {\n\treturn path.resolve(parts.join(path.sep) + path.sep, filename);\n}\n\nmodule.exports = function (filename, opts) {\n\topts = opts || {};\n\n\tvar parts = splitPath(opts.cwd);\n\n\treturn new Promise(function (resolve) {\n\t\t(function find() {\n\t\t\tvar fp = join(parts, filename);\n\n\t\t\tpathExists(fp).then(function (exists) {\n\t\t\t\tif (exists) {\n\t\t\t\t\tresolve(fp);\n\t\t\t\t} else if (parts.pop()) {\n\t\t\t\t\tfind();\n\t\t\t\t} else {\n\t\t\t\t\tresolve(null);\n\t\t\t\t}\n\t\t\t});\n\t\t})();\n\t});\n};\n\nmodule.exports.sync = function (filename, opts) {\n\topts = opts || {};\n\n\tvar parts = splitPath(opts.cwd);\n\tvar len = parts.length;\n\n\twhile (len--) {\n\t\tvar fp = join(parts, filename);\n\n\t\tif (pathExists.sync(fp)) {\n\t\t\treturn fp;\n\t\t}\n\n\t\tparts.pop();\n\t}\n\n\treturn null;\n};\n"]}