{"version":3,"sources":["filters.js"],"names":[],"mappings":"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","file":"filters-compiled.js","sourcesContent":["Vue.filter('doneLabel', (value) => value == 0 ? \"Não paga\" : \"Paga\");\r\n\r\nVue.filter('doneReceiveLabel', (value) => value == 0 ? \"Não recebida\" : \"Recebida\");\r\n\r\nVue.filter('statusPay', (value) => {\r\n    if (value === false) {\r\n        return \"Nenhuma conta cadastrada\";\r\n    }\r\n    if (!value) {\r\n        return \"Nenhuma conta a pagar\";\r\n    }\r\n    return value + \" contas a pagar\";\r\n});\r\n\r\nVue.filter('statusReceive', function (value) {\r\n    if (value === false) {\r\n        return \"Nenhuma conta cadastrada\";\r\n    }\r\n    if (!value) {\r\n        return \"Nenhuma conta a receber\";\r\n    }\r\n    return value + \" contas a receber\";\r\n});\r\n\r\nVue.filter('numberFormat', {\r\n    read(value,locale = \"pt-BR\"){\r\n        let number = 0;\r\n        if(value && typeof value !== undefined){\r\n            let numberRegex = value.toString().match(/\\d+(\\.{1}\\d{1,2}){0,1}/g);\r\n            number = numberRegex ? numberRegex[0] : 0;\r\n        }\r\n        return new Intl.NumberFormat(locale,{\r\n            maximumFractionDigits: 2,\r\n            minimumFractionDigits: 2,\r\n            style: 'currency',\r\n            currency: 'BRL'\r\n        }).format(number);\r\n    },\r\n    write(value){\r\n        let number = 0;\r\n        if(value.length > 0){\r\n            number = value.replace(/[^\\d\\,]/g, '')\r\n                .replace(/\\,/g,'.');\r\n            number = isNaN(number) ? 0 : parseFloat(number);\r\n        }\r\n        return number;\r\n    }\r\n});\r\n\r\nVue.filter('dateFormat', {\r\n    read(value, locale = 'pt-BR'){\r\n        if(value && typeof value !== undefined){\r\n            if(!(value instanceof Date)){\r\n                var dateRegex = value.match(/\\d{4}\\-\\d{2}\\-\\d{2}/g);\r\n                var dateString = dateRegex ? dateRegex[0] : null;\r\n                if(dateString){\r\n                    value = new Date(dateString+\"T03:00:00\");\r\n                }else{\r\n                    return value;\r\n                }\r\n            }\r\n            return new Intl.DateTimeFormat(locale).format(value).split(' ')[0];\r\n        }\r\n        return value;\r\n    },\r\n    write(value){\r\n        var dateRegex = value.match(/\\d{2}\\/\\d{2}\\/\\d{4}/g);\r\n        if(dateRegex){\r\n            let  dateString = dateRegex[0];\r\n            let  date = new Date(dateString.split('/').reverse().join('-')+\"T03:00:00\");\r\n            if(!isNaN(date.getTime())){\r\n                return date;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n});\r\n\r\nVue.filter('toUpper',{\r\n    read(value){\r\n        return value.toUpperCase();\r\n    },\r\n    write(value){\r\n        return value.toUpperCase();\r\n    }\r\n});"]}